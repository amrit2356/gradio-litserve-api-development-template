name: Run Pytest

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1
        sudo apt-get install -y bc

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install torch==2.2.2 torchvision==0.17.2 torchaudio==2.2.2 --index-url https://download.pytorch.org/whl/cpu
        python -m pip install pytest pytest-asyncio

    - name: Run Pytest
      env:
        PYTHONPATH: .
      run: |
        pytest -v --tb=short --junitxml=pytest-report.xml
      continue-on-error: true

    - name: Show test summary
      if: always()
      run: |
        echo "----- TEST SUMMARY -----"
        if [ -f pytest-report.xml ]; then
          TOTAL=$(grep -o 'tests="[0-9]*"' pytest-report.xml | grep -o '[0-9]*')
          FAILURES=$(grep -o 'failures="[0-9]*"' pytest-report.xml | grep -o '[0-9]*')
          ERRORS=$(grep -o 'errors="[0-9]*"' pytest-report.xml | grep -o '[0-9]*')
          SKIPPED=$(grep -o 'skipped="[0-9]*"' pytest-report.xml | grep -o '[0-9]*')
          echo "Total: $TOTAL"
          echo "Failures: $FAILURES"
          echo "Errors: $ERRORS"
          echo "Skipped: $SKIPPED"
        else
          echo "❌ No test report found."
        fi

    - name: Enforce minimum pass rate
      if: always()
      run: |
        if [ -f pytest-report.xml ]; then
          TOTAL=$(grep -o 'tests="[0-9]*"' pytest-report.xml | grep -o '[0-9]*')
          FAILURES=$(grep -o 'failures="[0-9]*"' pytest-report.xml | grep -o '[0-9]*')
          ERRORS=$(grep -o 'errors="[0-9]*"' pytest-report.xml | grep -o '[0-9]*')
          FAILED=$((FAILURES + ERRORS))
          PASSED=$((TOTAL - FAILED))
          echo "Passed: $PASSED / $TOTAL"

          if [ "$TOTAL" -eq 0 ]; then
            echo "❌ No tests were run!"
            exit 1
          fi

          PASS_RATE=$(echo "scale=2; ($PASSED/$TOTAL)*100" | bc)
          echo "✅ Pass Rate: $PASS_RATE%"

          THRESHOLD=90.0
          if (( $(echo "$PASS_RATE < $THRESHOLD" | bc -l) )); then
            echo "❌ Pass rate below threshold of $THRESHOLD%"
            exit 1
          fi
        else
          echo "❌ Test report not found. Failing build."
          exit 1
        fi

    - name: Upload test report artifact
      if: ${{ !env.ACT }}  # Skip upload when running with act
      uses: actions/upload-artifact@v4
      with:
        name: pytest-report
        path: pytest-report.xml